# -*- coding: utf-8 -*-
"""machinelearn_Escolas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ktGOBCU0bEJMfPMRUBUPl0POlt2fo21
"""

!git clone https://github.com/InfraSchools/analiseDados.git

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import sklearn
import sklearn.datasets
import sklearn.linear_model

# %matplotlib inline

df = pd.read_csv("analiseDados/base/Base_Completa.csv", sep=';', encoding='utf-8', squeeze = True)

df

# [x for x in df.columns]

df = df[df.TAXA_PARTICIPACAO_5EF!=0]

sns.boxplot(data=df['MEDIA_5EF_LP'])

""" treinamento """

q1 = df['MEDIA_5EF_LP'].quantile(q=0.25)
q4 = df['MEDIA_5EF_LP'].quantile(q=0.75)

df1Q = df[df['MEDIA_5EF_LP']<q1]
df4Q = df[df['MEDIA_5EF_LP']>q4]

df1Q['ROTULO'] = 0
df4Q['ROTULO'] = 1

treino_base_LP = pd.concat([df4Q , df1Q])

X = treino_base_LP[[ 'IN_LABORATORIO_INFORMATICA','IN_BIBLIOTECA', 'IN_AGUA_FILTRADA', 'IN_ENERGIA_REDE_PUBLICA','IN_AGUA_INEXISTENTE','IN_ESGOTO_INEXISTENTE','IN_QUADRA_ESPORTES', 'IN_SALA_LEITURA','IN_BIBLIOTECA_SALA_LEITURA', 'IN_INTERNET']]

y = treino_base_LP['ROTULO']

from sklearn.model_selection import train_test_split 

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

from sklearn.svm import SVC
svclassifier = SVC(kernel='rbf')
svclassifier.fit(X_train, y_train)

y_pred = svclassifier.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

from sklearn.svm import SVC
svclassifier = SVC(kernel='rbf')
svclassifier.fit(X_train, y_train)

y_pred = svclassifier.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

from sklearn.svm import SVC
svclassifier = SVC(kernel='sigmoid')
svclassifier.fit(X_train, y_train)

y_pred = svclassifier.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))